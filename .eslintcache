[{"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\App.js":"1","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\theme.js":"2","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\containers\\ParentContainer.js":"3","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\reportWebVitals.js":"4","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\utils\\callApi.js":"5","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\apis.js":"6","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\components\\Loader.js":"7","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\index.js":"8","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\components\\LineChart.js":"9","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\utils\\index.js":"10","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\components\\CustomTooltip.js":"11","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\utils\\constants.js":"12"},{"size":357,"mtime":1611823918413,"results":"13","hashOfConfig":"14"},{"size":587,"mtime":1611900959319,"results":"15","hashOfConfig":"14"},{"size":6742,"mtime":1611907096508,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1608137520725,"results":"17","hashOfConfig":"14"},{"size":361,"mtime":1611826703401,"results":"18","hashOfConfig":"14"},{"size":299,"mtime":1611857899580,"results":"19","hashOfConfig":"14"},{"size":938,"mtime":1611860490426,"results":"20","hashOfConfig":"14"},{"size":500,"mtime":1608137520725,"results":"21","hashOfConfig":"14"},{"size":2232,"mtime":1611901518408,"results":"22","hashOfConfig":"14"},{"size":674,"mtime":1611902180492,"results":"23","hashOfConfig":"14"},{"size":1020,"mtime":1611902169027,"results":"24","hashOfConfig":"14"},{"size":228,"mtime":1611830791505,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"131o1kd",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\App.js",[],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\theme.js",[],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\containers\\ParentContainer.js",[],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\reportWebVitals.js",[],["54","55"],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\utils\\callApi.js",[],["56","57"],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\apis.js",[],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\components\\Loader.js",[],["58","59"],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\index.js",[],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\components\\LineChart.js",["60"],"import React from \"react\";\r\nimport { LineChart, Line } from \"recharts\";\r\nimport { XAxis, YAxis, Tooltip } from \"recharts\";\r\nimport { Legend, ResponsiveContainer, CartesianGrid } from \"recharts\";\r\nimport { customTickFormatter, formatXAxis } from \"../utils\";\r\nimport { rechartColors } from \"../utils/constants\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\n\r\nconst LineChartMolecule = (props) => {\r\n  const { data, width, height, isDateOnXaxis, isTimeOnXaxis } = props;\r\n\r\n  let colors = rechartColors;\r\n\r\n  return (\r\n    data?.data && (\r\n      <ResponsiveContainer width={width} height={height}>\r\n        <LineChart\r\n          data={data.data}\r\n          margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"name\"\r\n            tick={{ fill: \"#949494\" }}\r\n            stroke=\"#5c5c5c\"\r\n            strokeWidth={0.5}\r\n            tickLine={false}\r\n            axisLine={true}\r\n            tickFormatter={(tickItem) =>\r\n              formatXAxis(tickItem, isDateOnXaxis, isTimeOnXaxis)\r\n            }\r\n            // interval=\"preserveStartEnd\"\r\n          />\r\n          <YAxis\r\n            tick={{ fill: \"#949494\" }}\r\n            stroke=\"#5c5c5c\"\r\n            strokeWidth={0.5}\r\n            tickLine={false}\r\n          />\r\n          <CartesianGrid strokeWidth={0.5} />\r\n          <Tooltip\r\n            content={\r\n              <CustomTooltip\r\n                isDateOnXaxis={isDateOnXaxis}\r\n                isTimeOnXaxis={isTimeOnXaxis}\r\n                {...props}\r\n              />\r\n            }\r\n          />\r\n          <Legend wrapperStyle={{ color: \"#c2c9d9\" }} />\r\n          {data.lines.map((line, index) => {\r\n            return (\r\n              <Line\r\n                key={index}\r\n                // type=\"monotone\"\r\n                name={line.name}\r\n                dataKey={line.key}\r\n                unit={line.unit}\r\n                stroke={colors[index]}\r\n                strokeDasharray={line.dashedLine ? \"5 5\" : null}\r\n                dot={{\r\n                  fill: colors[index],\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(LineChartMolecule);\r\n","D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\utils\\index.js",[],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\components\\CustomTooltip.js",[],"D:\\Projects\\Test\\Synergia\\sime_labs_project\\src\\utils\\constants.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"61","replacedBy":"67"},{"ruleId":"63","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":29},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],["73"],["74"],"no-unused-vars","'customTickFormatter' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]